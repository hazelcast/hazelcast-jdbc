name: Release version
on:
  workflow_dispatch:
    inputs:
      release-branch:
        description: 'On which branch the release should be done. Keep it empty for the default branch'
        required: false
      release-version:
        description: 'Version to be released (e.g. 5.3.0).'
        required: true
      next-snapshot-version:
        description: 'Version to be set after the release (e.g. 5.4.0-SNAPSHOT).'
        required: true
env:
  GIT_AUTHOR_NAME: GitHub Actions Bot
  GIT_AUTHOR_EMAIL: <>
  GIT_COMMITTER_NAME: GitHub Actions Bot
  GIT_COMMITTER_EMAIL: <>

jobs:
  do-release:
    if: github.repository_owner == 'hazelcast'
    runs-on: ubuntu-latest
    name: Build and release version
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.release-branch }}
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'adopt'
          server-id: deploy-repository
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          architecture: 'x64'
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: 'maven'

      - name: Prepare Deployment
        run: |
          ./mvnw versions:set -B -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.release-version }}
          git commit -am "Set version to ${{ github.event.inputs.release-version }}"
          git tag v${{ github.event.inputs.release-version }}
          ./mvnw clean install -V -B

      - name: Deploy OS with Maven
        run: ./mvnw -V -B deploy -Djdbc-release -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_OSS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_OSS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Deploy EE with Maven
        run: ./mvnw -f hazelcast-jdbc-enterprise -V -B deploy -Djdbc-release -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.JFROG_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Finish Deployment
        run: |
          ./mvnw versions:set -B -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.next-snapshot-version }}
          git commit -am "Set version to ${{ github.event.inputs.next-snapshot-version }}"
          git push origin v${{ github.event.inputs.release-version }}
          if [ -n "${{ github.event.inputs.release-branch }}" ]; then
            git push origin "${{ github.event.inputs.release-branch }}"
          else
            git push
          fi

      - name: Upload OS binaries to the GitHub release
        uses: svenstaro/upload-release-action@cc92c9093e5f785e23a3d654fe2671640b851b5f
        with:
          file: hazelcast-jdbc/target/hazelcast-jdbc-*.jar
          file_glob: true
          tag: v${{ github.event.inputs.release-version }}
          overwrite: true
