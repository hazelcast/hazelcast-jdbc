name: Release version
on:
  workflow_dispatch:
    inputs:
      release-branch:
        description: 'On which branch the release should be done. Keep it empty for the default branch'
        required: false
      release-version:
        description: 'Version to be released (e.g. 5.3.0).'
        required: true
env:
  GIT_AUTHOR_NAME: GitHub Actions Bot
  GIT_AUTHOR_EMAIL: <>
  GIT_COMMITTER_NAME: GitHub Actions Bot
  GIT_COMMITTER_EMAIL: <>
  CLUSTER_NAME: smoke-test
  EE_CLUSTER_NAME: smoke-test-ee

jobs:
  do-release:
    if: github.repository_owner == 'hazelcast'
    runs-on: ubuntu-latest

    name: Build and release version
    env:
      MAVEN_ARGS: --batch-mode --no-transfer-progress --show-version
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.inputs.release-branch }}
          token: ${{ secrets.GH_PAT }}
      - name: Read Java Config
        run: cat ${{ github.workspace }}/.github/java-config.env >> $GITHUB_ENV
      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          server-id: deploy-repository
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          architecture: 'x64'
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: 'maven'

      - name: Prepare Deployment
        run: |
          ./mvnw versions:set -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.release-version }}
          ./mvnw --settings settings.xml clean install -DskipTests

      - name: Deploy OS with Maven
        run: ./mvnw deploy -Djdbc-release -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_OSS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_OSS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
